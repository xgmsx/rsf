syntax = "proto3";

// Package inventory.v1 содержит API для работы с сервисом Inventory
package inventory.v1;

import "google/api/annotations.proto";
import "validate/validate.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/xgmsx/rsf/shared/pkg/proto/inventory/v1;inventory_v1";


service InventoryService {
  // Получение данных о детали по её UUID
  rpc GetPart(GetPartRequest) returns (GetPartResponse) {
    option (google.api.http) = {
      get: "/api/v1/part/{uuid}"
    };
  }

  // Получение списка деталей с фильтрацией
  rpc ListParts(ListPartsRequest) returns (ListPartsResponse) {
    option (google.api.http) = {
      get: "/api/v1/part"
    };
  }
}

// Запрос на получение данных детали по UUID
message GetPartRequest {
  string uuid = 1 [(validate.rules).string.len = 36];
}

// Ответ на запрос получения данных детали
message GetPartResponse {
  Part part = 1;
}

// Запрос на получение списка деталей с фильтрацией
message ListPartsRequest {
  PartsFilter filter = 1;
}

// Ответ на запрос получения списка деталей
message ListPartsResponse {
  repeated Part parts = 1;
}

// Фильтр для поиска деталей
message PartsFilter {
  repeated string uuids = 1 [(validate.rules).repeated.items.string.len = 36];
  repeated string names = 2;
  repeated Category categories = 3;
  repeated string manufacturer_countries = 4;
  repeated string tags = 5;
}

// Структура представляющая собой деталь
message Part {
  string uuid = 1 [(validate.rules).string.len = 36];
  string name = 2;
  string description = 3;
  double price = 4;
  int64 stock_quantity = 5;
  Category category = 6;
  Dimensions dimensions = 7;
  Manufacturer manufacturer = 8;
  repeated string tags = 9;
  map<string, Value> metadata = 10;
  google.protobuf.Timestamp created_at = 11;
  google.protobuf.Timestamp updated_at = 12;
}

// Категория детали
enum Category {
  CATEGORY_UNSPECIFIED = 0;
  CATEGORY_ENGINE = 1;
  CATEGORY_FUEL = 2;
  CATEGORY_PORTHOLE = 3;
  CATEGORY_WING = 4;
  CATEGORY_SHIELD = 5;
}

// Размеры детали
message Dimensions {
  double length = 1; // Длина в см
  double width = 2;  // Ширина в см
  double height = 3; // Высота в см
  double weight = 4; // Вес в кг
}

// Производитель детали
message Manufacturer {
  string name = 1;
  string country = 2;
  string website = 3;
}

// Гибкое значение для метаданных
message Value {
  oneof kind {
    string string_value = 1;
    int64 int64_value = 2;
    double double_value = 3;
    bool bool_value = 4;
  }
}
