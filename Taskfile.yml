version: '3'

vars:
  MODULES: inventory order payment
  GCI_PREFIX: github.com/xgmsx/rsf

  # –≤–µ—Ä—Å–∏–∏ —É—Ç–∏–ª–∏—Ç
  GO_VERSION: '1.24'
  GCI_VERSION: 'v0.13.6'
  GOFUMPT_VERSION: 'v0.8.0'
  GOLANGCI_LINT_VERSION: 'v2.1.5'
  MERGE_OPENAPI_VERSION: 'v1.0.0'
  GRPCURL_VERSION: 'v1.9.3'
  OGEN_VERSION: 'v1.12.0'
  YQ_VERSION: 'v4.45.2'

  # –≤–µ—Ä—Å–∏–∏ protoc-–ø–ª–∞–≥–∏–Ω–æ–≤
  PROTOC_VERSION: '31.1'
  PROTOC_GEN_GO_VERSION: 'v1.36.6'
  PROTOC_GEN_GO_GRPC_VERSION: 'v1.5.1'
  PROTOC_GEN_GRPC_GATEWAY_VERSION: 'v2.26.3'
  PROTOC_GEN_OPENAPIV2_VERSION: 'v2.26.3'
  PROTOC_GEN_VALIDATE_VERSION: 'v1.2.1'

  # –≤–µ—Ä—Å–∏–∏ proto-–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
  PROTO_GOOGLEAPIS_VERSION: 'e4686281e5e83657e579b835994a132d34f7e49e'
  PROTO_GEN_VALIDATE_VERSION: 'v1.2.1'

  # –ø—É—Ç–∏ –∫ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º —Ñ–∞–π–ª–∞–º
  BIN_DIR: '{{.ROOT_DIR}}/bin'
  GCI: '{{.BIN_DIR}}/gci'
  GOFUMPT: '{{.BIN_DIR}}/gofumpt'
  GOLANGCI_LINT: '{{.BIN_DIR}}/golangci-lint'
  MERGE_OPENAPI: '{{.BIN_DIR}}/go-merge-openapi'
  GRPCURL: '{{.BIN_DIR}}/grpcurl'
  OGEN: '{{.BIN_DIR}}/ogen'
  YQ: '{{.BIN_DIR}}/yq'

  PROTOC: '{{.BIN_DIR}}/protoc/bin/protoc'
  PROTOC_GEN_GO: '{{.BIN_DIR}}/protoc-gen-go'
  PROTOC_GEN_GO_GRPC: '{{.BIN_DIR}}/protoc-gen-go-grpc'
  PROTOC_GEN_GRPC_GATEWAY: '{{.BIN_DIR}}/protoc-gen-grpc-gateway'
  PROTOC_GEN_OPENAPIV2: '{{.BIN_DIR}}/protoc-gen-openapiv2'
  PROTOC_GEN_VALIDATE: '{{.BIN_DIR}}/protoc-gen-validate'

  PROTO_GOOGLEAPIS_DIR: '{{.BIN_DIR}}/proto-libs/googleapis'
  PROTO_GEN_VALIDATE_DIR: '{{.BIN_DIR}}/proto-libs/gen_validate'

tasks:

  update:deps:
    desc: "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –≤ go.mod –≤–æ –≤—Å–µ—Ö –º–æ–¥—É–ª—è—Ö"
    cmds:
      - |
        echo "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –≤ go.mod –≤–æ –≤—Å–µ—Ö –º–æ–¥—É–ª—è—Ö"
        for mod in {{.MODULES}}; do
          if [ -d "$mod" ]; then
            echo "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –≤ $mod"
            (cd "$mod" && go mod tidy -compat=1.24) || exit 1
          fi
        done

  lint:
    desc: "–ó–∞–ø—É—Å–∫–∞–µ—Ç golangci-lint –¥–ª—è –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π"
    deps: [ install:golangci-lint ]
    cmds:
      - |
        set -e
        ERR=0
        echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–¥—É–ª–∏..."
        for mod in {{.MODULES}}; do
          if [ -d "$mod" ]; then
            echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–¥—É–ª—å $mod"
            {{.GOLANGCI_LINT}} run $mod/... --config=.golangci.yml || ERR=1
          fi
        done
        exit $ERR

  lint:proto:
    deps: [ install:protoc, install:protoc-plugins, install:proto-deps ]
    desc: "–ü—Ä–æ–≤–µ—Ä–∫–∞ .proto-—Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞"
    cmds:
      - |
        echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º proto —Ñ–∞–π–ª—ã..."
        for mod in {{.MODULES}}; do
          if [ -d "$mod/proto" ]; then
            find "$mod/proto" -name "*.proto"  | while read -r file; do
              echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º proto —Ñ–∞–π–ª $file..."
              {{.PROTOC}} \
                --proto_path="$mod/proto" \
                --proto_path='{{.PROTO_GOOGLEAPIS_DIR}}' \
                --proto_path='{{.PROTO_GEN_VALIDATE_DIR}}' \
                --descriptor_set_out=/dev/null \
                "$file" || exit 1  
            done
          fi
        done

  format:
    desc: "–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –≤–µ—Å—å –ø—Ä–æ–µ–∫—Ç gofumpt + gci, –∏—Å–∫–ª—é—á–∞—è mocks"
    deps: [ install:formatters ]
    cmds:
      - |
        echo "üßº –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —á–µ—Ä–µ–∑ gofumpt..."
        for mod in {{.MODULES}}; do
          if [ -d "$mod" ]; then
            echo "üßº –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º $mod"
            find $mod -type f -name '*.go' ! -path '*/mocks/*' -exec {{.GOFUMPT}} -extra -w {} +
          fi
        done
      - |
        echo "üéØ –°–æ—Ä—Ç–∏—Ä—É–µ–º –∏–º–ø–æ—Ä—Ç—ã —á–µ—Ä–µ–∑ gci..."
        for mod in {{.MODULES}}; do
          if [ -d "$mod" ]; then
            echo "üéØ –°–æ—Ä—Ç–∏—Ä—É–µ–º –∏–º–ø–æ—Ä—Ç—ã –≤ $mod"
            find $mod -type f -name '*.go' ! -path '*/mocks/*' -exec {{.GCI}} write -s standard -s default -s "prefix({{.GCI_PREFIX}})" {} +
          fi
        done

  gen:
    desc: "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤—Å–µ—Ö proto –∏ OpenAPI –¥–µ–∫–ª–∞—Ä–∞—Ü–∏–π"
    cmds:
      - task: gen:openapi
      - task: gen:proto

  gen:openapi:
    desc: "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è Go-–∫–æ–¥–∞ –∏–∑ –≤—Å–µ—Ö OpenAPI-–¥–µ–∫–ª–∞—Ä–∞—Ü–∏–π —Å x-ogen"
    deps: [ install:ogen, install:yq ]
    cmds:
      - |
        for mod in {{.MODULES}}; do
          if [ -d "$mod/api" ]; then
            find "$mod/api" -name '*openapi.yaml' -o -name '*openapi.yml' | while read -r file; do
              if [ -f "$file" ] && grep -q 'x-ogen:' "$file"; then
                target_api_dir="./shared/api"
                target_openapi_dir="./shared/pkg/openapi/$mod"
                mkdir -p $target_api_dir && mkdir -p $target_openapi_dir
                target=$target_openapi_dir/$({{.YQ}} e '."x-ogen".target' "$file")
                package=$({{.YQ}} e '."x-ogen".package' "$file")
                echo "üöÄ Generating from: $file"
                echo "üìÅ Target: $target_openapi_dir"
                {{.OGEN}} \
                  --target "$target" \
                  --package "$package" \
                  --clean \
                  "$file" || exit 1
                echo "üöÄ Merging: $file"
                {{.MERGE_OPENAPI}} -config $file -output $target_api_dir/$package.swagger.json
              fi
            done
          fi
        done

  gen:proto:
    deps: [ lint:proto ]
    desc: "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è Go-–∫–æ–¥–∞ –∏–∑ –≤—Å–µ—Ö .proto —Ñ–∞–π–ª–æ–≤"
    cmds:
      - |
        for mod in {{.MODULES}}; do
          if [ -d "$mod/proto" ]; then
            find "$mod/proto" -name '*.proto' | while read -r file; do
              target_api_dir="./shared/api"
              target_proto_dir="./shared/pkg/proto/$mod"
              mkdir -p $target_api_dir && mkdir -p $target_proto_dir
              echo "üöÄ Generating from: $file"
              echo "üìÅ Target: $target_proto_dir"
              {{.PROTOC}} \
                --proto_path="$mod/proto" \
                --proto_path='{{.PROTO_GOOGLEAPIS_DIR}}' \
                --proto_path='{{.PROTO_GEN_VALIDATE_DIR}}' \
                --plugin=protoc-gen-go={{.PROTOC_GEN_GO}} \
                --plugin=protoc-gen-go-grpc={{.PROTOC_GEN_GO_GRPC}} \
                --plugin=protoc-gen-grpc-gateway={{.PROTOC_GEN_GRPC_GATEWAY}} \
                --plugin=protoc-gen-validate={{.PROTOC_GEN_VALIDATE}} \
                --plugin=protoc-gen-openapiv2={{.PROTOC_GEN_OPENAPIV2}} \
                --go_out="$target_proto_dir" \
                --go_opt=paths=source_relative \
                --go-grpc_out="$target_proto_dir" \
                --go-grpc_opt=paths=source_relative \
                --grpc-gateway_out="$target_proto_dir" \
                --grpc-gateway_opt=paths=source_relative \
                --validate_out="lang=go,paths=source_relative:$target_proto_dir" \
                --openapiv2_out="$target_api_dir" \
                --openapiv2_opt=json_names_for_fields=false,allow_merge=true,merge_file_name=$mod \
                "$file" || exit 1
            done
          fi
        done
        
  install:protoc:
    desc: "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç protoc –≤ –∫–∞—Ç–∞–ª–æ–≥ bin"
    cmds:
      - |
        [ -f {{.BIN_DIR}}/protoc/bin/protoc ] || {
          echo 'üì¶ Downloading protoc...'
          mkdir -p {{.BIN_DIR}}/protoc
          curl -sSL \
            "https://github.com/protocolbuffers/protobuf/releases/download/v{{.PROTOC_VERSION}}/protoc-{{.PROTOC_VERSION}}-$(uname -s | tr '[:upper:]' '[:lower:]')-$(uname -m).zip" \
            -o {{.BIN_DIR}}/protoc/protoc.zip
          unzip -q {{.BIN_DIR}}/protoc/protoc.zip -d {{.BIN_DIR}}/protoc
          chmod +x {{.PROTOC}}
        }

  install:protoc-plugins:
    desc: "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø–ª–∞–≥–∏–Ω—ã protoc –≤ –∫–∞—Ç–∞–ª–æ–≥ bin"
    cmds:
      - |
        [ -f {{.PROTOC_GEN_GO}} ] || {
          echo 'üì¶ Installing protoc-gen-go...'
          GOBIN={{.BIN_DIR}} go install google.golang.org/protobuf/cmd/protoc-gen-go@{{.PROTOC_GEN_GO_VERSION}}
        }
        [ -f {{.PROTOC_GEN_GO_GRPC}} ] || {
          echo 'üì¶ Installing plugin protoc-gen-go-grpc...'
          GOBIN={{.BIN_DIR}} go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@{{.PROTOC_GEN_GO_GRPC_VERSION}}
        }
        [ -f {{.PROTOC_GEN_GRPC_GATEWAY}} ] || {
          echo 'üì¶ Installing plugin protoc-gen-grpc-gateway...'
          GOBIN={{.BIN_DIR}} go install github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-grpc-gateway@{{.PROTOC_GEN_GRPC_GATEWAY_VERSION}}
        }
        [ -f {{.PROTOC_GEN_VALIDATE}} ] || {
          echo 'üì¶ Installing plugin protoc-gen-validate...'
          GOBIN={{.BIN_DIR}} go install github.com/envoyproxy/protoc-gen-validate@{{.PROTOC_GEN_VALIDATE_VERSION}}
        }
        [ -f {{.PROTOC_GEN_OPENAPIV2}} ] || {
          echo 'üì¶ Installing plugin protoc-gen-openapiv2...'
          GOBIN={{.BIN_DIR}} go install github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2@{{.PROTOC_GEN_OPENAPIV2_VERSION}}
        }

  install:proto-deps:
    desc: "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ googleapis –∏ protoc-gen-validate"
    cmds:
      - |
        # –°–∫–∞—á–∏–≤–∞–µ–º googleapis
        [ -d {{.PROTO_GOOGLEAPIS_DIR}} ] || {
          echo 'üì¶ Downloading googleapis...'
          mkdir -p {{.PROTO_GOOGLEAPIS_DIR}}
          curl -sSL https://github.com/googleapis/googleapis/archive/{{.PROTO_GOOGLEAPIS_VERSION}}.tar.gz | \
            tar -xz -C {{.PROTO_GOOGLEAPIS_DIR}} --strip-components=1
        }
        # –°–∫–∞—á–∏–≤–∞–µ–º protoc-gen-validate proto —Ñ–∞–π–ª—ã
        [ -d {{.PROTO_GEN_VALIDATE_DIR}} ] || {
          echo 'üì¶ Downloading protoc-gen-validate protos...'
          mkdir -p {{.PROTO_GEN_VALIDATE_DIR}}
          curl -sSL https://github.com/bufbuild/protoc-gen-validate/archive/refs/tags/{{.PROTO_GEN_VALIDATE_VERSION}}.tar.gz | \
            tar -xz -C {{.PROTO_GEN_VALIDATE_DIR}} --strip-components=1
        }

  install:ogen:
    desc: "–°–∫–∞—á–∏–≤–∞–µ—Ç ogen –≤ –ø–∞–ø–∫—É bin"
    cmds:
      - |
        [ -f {{.OGEN}} ] || {
          echo 'üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º ogen...'
          GOBIN={{.BIN_DIR}} go install github.com/ogen-go/ogen/cmd/ogen@{{.OGEN_VERSION}}
        }
        [ -f {{.MERGE_OPENAPI}} ] || {
          echo 'üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º go-merge-openapi...'
          GOBIN={{.BIN_DIR}} go install github.com/xgmsx/go-merge-openapi@{{.MERGE_OPENAPI_VERSION}}
        }

  install:yq:
    desc: "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç yq –≤ –∫–∞—Ç–∞–ª–æ–≥ bin"
    cmds:
      - |
        [ -f {{.YQ}} ] || {
          echo 'üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º yq...'
          GOBIN={{.BIN_DIR}} go install github.com/mikefarah/yq/v4@{{.YQ_VERSION}}
        }

  install:formatters:
    desc: "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ñ–æ—Ä–º–∞—Ç–µ—Ä—ã gci –∏ gofumpt –≤ –∫–∞—Ç–∞–ª–æ–≥ bin"
    summary: |
      –≠—Ç–∞ –∑–∞–¥–∞—á–∞ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–¥–∞ gofumpt –∏ gci –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ bin.
      –ï—Å–ª–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –æ–Ω–∏ –±—É–¥—É—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º–∏ –≤–µ—Ä—Å–∏—è–º–∏.
      
      –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è:
        - gofumpt: –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–¥–∞ Go
        - gci: –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –∏–º–ø–æ—Ä—Ç–æ–≤ Go
    cmds:
      - |
        [ -f {{.GOFUMPT}} ] || {
          echo 'üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º gofumpt {{.GOFUMPT_VERSION}}...'
          GOBIN={{.BIN_DIR}} go install mvdan.cc/gofumpt@{{.GOFUMPT_VERSION}}
        }
        [ -f {{.GCI}} ] || {
          echo 'üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º gci {{.GCI_VERSION}}...'
          GOBIN={{.BIN_DIR}} go install github.com/daixiang0/gci@{{.GCI_VERSION}}
        }
    status:
      - test -x {{.GOFUMPT}}
      - test -x {{.GCI}}

  install:golangci-lint:
    desc: "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç golangci-lint –≤ –∫–∞—Ç–∞–ª–æ–≥ bin"
    summary: |
      –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ golangci-lint –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ bin.
      –ï—Å–ª–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω, –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –µ–≥–æ —á–µ—Ä–µ–∑ go install.
      
      –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º–∞—è –≤–µ—Ä—Å–∏—è: {{.GOLANGCI_LINT_VERSION}}
    cmds:
      - |
        [ -f {{.GOLANGCI_LINT}} ] || {
          echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º golangci-lint {{.GOLANGCI_LINT_VERSION}}..."
          GOBIN={{.BIN_DIR}} go install github.com/golangci/golangci-lint/v2/cmd/golangci-lint@{{.GOLANGCI_LINT_VERSION}}
        }
    status:
      - test -x {{.GOLANGCI_LINT}}

  install:grpcurl:
    desc: "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç grpcurl –≤ –∫–∞—Ç–∞–ª–æ–≥ bin"
    cmds:
      - |
        [ -f {{.GRPCURL}} ] || {
          echo 'üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º grpcurl {{.GRPCURL_VERSION}}...'
          GOBIN={{.BIN_DIR}} go install github.com/fullstorydev/grpcurl/cmd/grpcurl@{{.GRPCURL_VERSION}}
        }
    status:
      - test -x {{.GRPCURL}}
